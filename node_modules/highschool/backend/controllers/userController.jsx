import bcrypt from 'bcrypt';
import { promisify } from 'util';

const query = promisify(db.query).bind(db);

// Fetch users
export const getUsers = async (req, res) => {
    try {
        const sql = "SELECT * FROM users";
        const data = await query(sql);
        return res.json(data);
    } catch (err) {
        console.error(err);
        return res.status(500).json({ error: "Database error while fetching users." });
    }
};

// User Registration
export const registerUser = async (req, res) => {
    const { name, email, password, user_type } = req.body;

    if (!name || !email || !password || !user_type || !req.file) {
        return res.status(400).json({ error: "Please provide name, email, password, user_type, and a profile picture." });
    }

    const hashedPassword = await bcrypt.hash(password, 10);
    const sql = "INSERT INTO users (name, email, password, user_type, profile_picture) VALUES (?, ?, ?, ?, ?)";

    try {
        await query(sql, [name, email, hashedPassword, user_type, req.file.path]);
        return res.status(201).json({ message: "User registered successfully." });
    } catch (err) {
        console.error(err);
        return res.status(500).json({ error: "Database error during registration." });
    }
};

// User Login
export const loginUser = async (req, res) => {
    const { email, password } = req.body;

    if (!email || !password) {
        return res.status(400).json({ error: "Please provide both email and password." });
    }

    const sql = "SELECT * FROM users WHERE email = ?";

    try {
        const data = await query(sql, [email]);
        if (data.length > 0) {
            const user = data[0];
            const isPasswordValid = await bcrypt.compare(password, user.password);
            if (isPasswordValid) {
                return res.status(200).json({
                    message: "Login successful",
                    user: {
                        id: user.id,
                        user_type: user.user_type,
                        name: user.name,
                        email: user.email,
                        profile_picture: user.profile_picture,
                    },
                });
            } else {
                return res.status(401).json({ error: "Invalid email or password." });
            }
        } else {
            return res.status(401).json({ error: "Invalid email or password." });
        }
    } catch (err) {
        console.error(err);
        return res.status(500).json({ error: "Database query error." });
    }
};

// Update profile
export const updateUserProfile = async (req, res) => {
    const userId = req.params.id; 
    const { name, email, phone } = req.body;

    if (!name || !email || !phone) {
        return res.status(400).json({ error: "Please provide name, email, and phone." });
    }

    let sqlQuery = "UPDATE users SET name = ?, email = ?, phone = ? ";
    let queryParams = [name, email, phone];

    if (req.file) {
        sqlQuery += ", profile_picture = ?";
        queryParams.push(req.file.path);
    }

    sqlQuery += " WHERE id = ?";
    queryParams.push(userId);

    try {
        const result = await query(sqlQuery, queryParams);
        if (result.affectedRows > 0) {
            return res.status(200).json({ message: "Profile updated successfully." });
        } else {
            return res.status(404).json({ error: "User not found." });
        }
    } catch (err) {
        console.error(err);
        return res.status(500).json({ error: "Database error while updating profile." });
    }
};